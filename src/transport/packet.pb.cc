// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packet.proto
// Protobuf C++ Version: 5.26.1

#include "packet.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr ProbePacket::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : seq_num_{::uint64_t{0u}},
        request_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ProbePacket::ProbePacket(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ProbePacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProbePacketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProbePacketDefaultTypeInternal() {}
  union {
    ProbePacket _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProbePacketDefaultTypeInternal _ProbePacket_default_instance_;

inline constexpr FeedbackPacket::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : nack_{},
        _nack_cached_byte_size_{0},
        lossrate_{0},
        rtt_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FeedbackPacket::FeedbackPacket(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FeedbackPacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FeedbackPacketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FeedbackPacketDefaultTypeInternal() {}
  union {
    FeedbackPacket _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FeedbackPacketDefaultTypeInternal _FeedbackPacket_default_instance_;

inline constexpr DataPacket::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DataPacket::DataPacket(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DataPacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataPacketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataPacketDefaultTypeInternal() {}
  union {
    DataPacket _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataPacketDefaultTypeInternal _DataPacket_default_instance_;

inline constexpr Packet::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : seq_num_{::uint64_t{0u}},
        packet_type_{static_cast< ::PacketType >(0)},
        fec_type_{static_cast< ::FecType >(0)},
        fec_index_{0u},
        subpacket_len_{0u},
        SubPacket_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Packet::Packet(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PacketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PacketDefaultTypeInternal() {}
  union {
    Packet _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PacketDefaultTypeInternal _Packet_default_instance_;
static ::_pb::Metadata file_level_metadata_packet_2eproto[4];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_packet_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_packet_2eproto = nullptr;
const ::uint32_t
    TableStruct_packet_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::DataPacket, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DataPacket, _impl_.data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::FeedbackPacket, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::FeedbackPacket, _impl_.lossrate_),
        PROTOBUF_FIELD_OFFSET(::FeedbackPacket, _impl_.rtt_),
        PROTOBUF_FIELD_OFFSET(::FeedbackPacket, _impl_.nack_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ProbePacket, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ProbePacket, _impl_.seq_num_),
        PROTOBUF_FIELD_OFFSET(::ProbePacket, _impl_.request_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Packet, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::Packet, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Packet, _impl_.seq_num_),
        PROTOBUF_FIELD_OFFSET(::Packet, _impl_.packet_type_),
        PROTOBUF_FIELD_OFFSET(::Packet, _impl_.fec_type_),
        PROTOBUF_FIELD_OFFSET(::Packet, _impl_.fec_index_),
        PROTOBUF_FIELD_OFFSET(::Packet, _impl_.subpacket_len_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::Packet, _impl_.SubPacket_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::DataPacket)},
        {9, -1, -1, sizeof(::FeedbackPacket)},
        {20, -1, -1, sizeof(::ProbePacket)},
        {30, -1, -1, sizeof(::Packet)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_DataPacket_default_instance_._instance,
    &::_FeedbackPacket_default_instance_._instance,
    &::_ProbePacket_default_instance_._instance,
    &::_Packet_default_instance_._instance,
};
const char descriptor_table_protodef_packet_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014packet.proto\032\022FEC/fec_type.proto\"\032\n\nDa"
    "taPacket\022\014\n\004data\030\001 \001(\014\"=\n\016FeedbackPacket"
    "\022\020\n\010lossrate\030\001 \001(\001\022\013\n\003rtt\030\002 \001(\r\022\014\n\004nack\030"
    "\003 \003(\004\"/\n\013ProbePacket\022\017\n\007seq_num\030\001 \001(\004\022\017\n"
    "\007request\030\002 \001(\010\"\204\002\n\006Packet\022\017\n\007seq_num\030\001 \001"
    "(\004\022 \n\013packet_type\030\002 \001(\0162\013.PacketType\022\032\n\010"
    "fec_type\030\003 \001(\0162\010.FecType\022\021\n\tfec_index\030\004 "
    "\001(\r\022\025\n\rsubpacket_len\030\005 \001(\r\022\"\n\013data_packe"
    "t\030\006 \001(\0132\013.DataPacketH\000\022*\n\017feedback_packe"
    "t\030\007 \001(\0132\017.FeedbackPacketH\000\022$\n\014probe_pack"
    "et\030\010 \001(\0132\014.ProbePacketH\000B\013\n\tSubPacket*\274\001"
    "\n\nPacketType\022\020\n\014DataPacketId\020\000\022\024\n\020Feedba"
    "ckPacketId\020\001\022\030\n\024ProbeRequestPacketId\020\002\022\031"
    "\n\025ProbeResponsePacketId\020\003\022\032\n\026SessionRequ"
    "estPacketId\020\004\022\033\n\027SessionResponsePacketId"
    "\020\005\022\030\n\024SessionStartPacketId\020\006b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_packet_2eproto_deps[1] =
    {
        &::descriptor_table_fec_5ftype_2eproto,
};
static ::absl::once_flag descriptor_table_packet_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_packet_2eproto = {
    false,
    false,
    636,
    descriptor_table_protodef_packet_2eproto,
    "packet.proto",
    &descriptor_table_packet_2eproto_once,
    descriptor_table_packet_2eproto_deps,
    1,
    4,
    schemas,
    file_default_instances,
    TableStruct_packet_2eproto::offsets,
    file_level_metadata_packet_2eproto,
    file_level_enum_descriptors_packet_2eproto,
    file_level_service_descriptors_packet_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_packet_2eproto_getter() {
  return &descriptor_table_packet_2eproto;
}
const ::google::protobuf::EnumDescriptor* PacketType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_packet_2eproto);
  return file_level_enum_descriptors_packet_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t PacketType_internal_data_[] = {
    458752u, 0u, };
bool PacketType_IsValid(int value) {
  return 0 <= value && value <= 6;
}
// ===================================================================

class DataPacket::_Internal {
 public:
};

DataPacket::DataPacket(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DataPacket)
}
inline PROTOBUF_NDEBUG_INLINE DataPacket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_(arena, from.data_),
        _cached_size_{0} {}

DataPacket::DataPacket(
    ::google::protobuf::Arena* arena,
    const DataPacket& from)
    : ::google::protobuf::Message(arena) {
  DataPacket* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:DataPacket)
}
inline PROTOBUF_NDEBUG_INLINE DataPacket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void DataPacket::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DataPacket::~DataPacket() {
  // @@protoc_insertion_point(destructor:DataPacket)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DataPacket::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.data_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
DataPacket::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(DataPacket, _impl_._cached_size_),
              false,
          },
          &DataPacket::MergeImpl,
          &DataPacket::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void DataPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:DataPacket)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DataPacket::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> DataPacket::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DataPacket_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DataPacket>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DataPacket, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(DataPacket, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* DataPacket::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataPacket)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes data = 1;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataPacket)
  return target;
}

::size_t DataPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataPacket)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void DataPacket::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DataPacket*>(&to_msg);
  auto& from = static_cast<const DataPacket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DataPacket)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DataPacket::CopyFrom(const DataPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DataPacket::IsInitialized() const {
  return true;
}

void DataPacket::InternalSwap(DataPacket* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
}

::google::protobuf::Metadata DataPacket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_packet_2eproto_getter,
                                   &descriptor_table_packet_2eproto_once,
                                   file_level_metadata_packet_2eproto[0]);
}
// ===================================================================

class FeedbackPacket::_Internal {
 public:
};

FeedbackPacket::FeedbackPacket(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:FeedbackPacket)
}
inline PROTOBUF_NDEBUG_INLINE FeedbackPacket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : nack_{visibility, arena, from.nack_},
        _nack_cached_byte_size_{0},
        _cached_size_{0} {}

FeedbackPacket::FeedbackPacket(
    ::google::protobuf::Arena* arena,
    const FeedbackPacket& from)
    : ::google::protobuf::Message(arena) {
  FeedbackPacket* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lossrate_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, lossrate_),
           offsetof(Impl_, rtt_) -
               offsetof(Impl_, lossrate_) +
               sizeof(Impl_::rtt_));

  // @@protoc_insertion_point(copy_constructor:FeedbackPacket)
}
inline PROTOBUF_NDEBUG_INLINE FeedbackPacket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : nack_{visibility, arena},
        _nack_cached_byte_size_{0},
        _cached_size_{0} {}

inline void FeedbackPacket::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lossrate_),
           0,
           offsetof(Impl_, rtt_) -
               offsetof(Impl_, lossrate_) +
               sizeof(Impl_::rtt_));
}
FeedbackPacket::~FeedbackPacket() {
  // @@protoc_insertion_point(destructor:FeedbackPacket)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FeedbackPacket::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
FeedbackPacket::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(FeedbackPacket, _impl_._cached_size_),
              false,
          },
          &FeedbackPacket::MergeImpl,
          &FeedbackPacket::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void FeedbackPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:FeedbackPacket)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nack_.Clear();
  ::memset(&_impl_.lossrate_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.rtt_) -
      reinterpret_cast<char*>(&_impl_.lossrate_)) + sizeof(_impl_.rtt_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FeedbackPacket::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> FeedbackPacket::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FeedbackPacket_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::FeedbackPacket>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double lossrate = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(FeedbackPacket, _impl_.lossrate_)}},
    // uint32 rtt = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FeedbackPacket, _impl_.rtt_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(FeedbackPacket, _impl_.rtt_)}},
    // repeated uint64 nack = 3;
    {::_pbi::TcParser::FastV64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(FeedbackPacket, _impl_.nack_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double lossrate = 1;
    {PROTOBUF_FIELD_OFFSET(FeedbackPacket, _impl_.lossrate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // uint32 rtt = 2;
    {PROTOBUF_FIELD_OFFSET(FeedbackPacket, _impl_.rtt_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated uint64 nack = 3;
    {PROTOBUF_FIELD_OFFSET(FeedbackPacket, _impl_.nack_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* FeedbackPacket::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FeedbackPacket)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double lossrate = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lossrate = this->_internal_lossrate();
  ::uint64_t raw_lossrate;
  memcpy(&raw_lossrate, &tmp_lossrate, sizeof(tmp_lossrate));
  if (raw_lossrate != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_lossrate(), target);
  }

  // uint32 rtt = 2;
  if (this->_internal_rtt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_rtt(), target);
  }

  // repeated uint64 nack = 3;
  {
    int byte_size = _impl_._nack_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          3, _internal_nack(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FeedbackPacket)
  return target;
}

::size_t FeedbackPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FeedbackPacket)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 nack = 3;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
        this->_internal_nack())
    ;
    _impl_._nack_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // double lossrate = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lossrate = this->_internal_lossrate();
  ::uint64_t raw_lossrate;
  memcpy(&raw_lossrate, &tmp_lossrate, sizeof(tmp_lossrate));
  if (raw_lossrate != 0) {
    total_size += 9;
  }

  // uint32 rtt = 2;
  if (this->_internal_rtt() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_rtt());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void FeedbackPacket::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FeedbackPacket*>(&to_msg);
  auto& from = static_cast<const FeedbackPacket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:FeedbackPacket)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_nack()->MergeFrom(from._internal_nack());
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lossrate = from._internal_lossrate();
  ::uint64_t raw_lossrate;
  memcpy(&raw_lossrate, &tmp_lossrate, sizeof(tmp_lossrate));
  if (raw_lossrate != 0) {
    _this->_impl_.lossrate_ = from._impl_.lossrate_;
  }
  if (from._internal_rtt() != 0) {
    _this->_impl_.rtt_ = from._impl_.rtt_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FeedbackPacket::CopyFrom(const FeedbackPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FeedbackPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FeedbackPacket::IsInitialized() const {
  return true;
}

void FeedbackPacket::InternalSwap(FeedbackPacket* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.nack_.InternalSwap(&other->_impl_.nack_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FeedbackPacket, _impl_.rtt_)
      + sizeof(FeedbackPacket::_impl_.rtt_)
      - PROTOBUF_FIELD_OFFSET(FeedbackPacket, _impl_.lossrate_)>(
          reinterpret_cast<char*>(&_impl_.lossrate_),
          reinterpret_cast<char*>(&other->_impl_.lossrate_));
}

::google::protobuf::Metadata FeedbackPacket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_packet_2eproto_getter,
                                   &descriptor_table_packet_2eproto_once,
                                   file_level_metadata_packet_2eproto[1]);
}
// ===================================================================

class ProbePacket::_Internal {
 public:
};

ProbePacket::ProbePacket(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProbePacket)
}
ProbePacket::ProbePacket(
    ::google::protobuf::Arena* arena, const ProbePacket& from)
    : ProbePacket(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ProbePacket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ProbePacket::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, seq_num_),
           0,
           offsetof(Impl_, request_) -
               offsetof(Impl_, seq_num_) +
               sizeof(Impl_::request_));
}
ProbePacket::~ProbePacket() {
  // @@protoc_insertion_point(destructor:ProbePacket)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ProbePacket::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ProbePacket::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ProbePacket, _impl_._cached_size_),
              false,
          },
          &ProbePacket::MergeImpl,
          &ProbePacket::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ProbePacket::Clear() {
// @@protoc_insertion_point(message_clear_start:ProbePacket)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.seq_num_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.request_) -
      reinterpret_cast<char*>(&_impl_.seq_num_)) + sizeof(_impl_.request_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ProbePacket::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ProbePacket::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ProbePacket_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ProbePacket>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool request = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ProbePacket, _impl_.request_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ProbePacket, _impl_.request_)}},
    // uint64 seq_num = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ProbePacket, _impl_.seq_num_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ProbePacket, _impl_.seq_num_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 seq_num = 1;
    {PROTOBUF_FIELD_OFFSET(ProbePacket, _impl_.seq_num_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool request = 2;
    {PROTOBUF_FIELD_OFFSET(ProbePacket, _impl_.request_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ProbePacket::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProbePacket)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 seq_num = 1;
  if (this->_internal_seq_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_seq_num(), target);
  }

  // bool request = 2;
  if (this->_internal_request() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_request(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProbePacket)
  return target;
}

::size_t ProbePacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProbePacket)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 seq_num = 1;
  if (this->_internal_seq_num() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_seq_num());
  }

  // bool request = 2;
  if (this->_internal_request() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ProbePacket::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ProbePacket*>(&to_msg);
  auto& from = static_cast<const ProbePacket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProbePacket)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_seq_num() != 0) {
    _this->_impl_.seq_num_ = from._impl_.seq_num_;
  }
  if (from._internal_request() != 0) {
    _this->_impl_.request_ = from._impl_.request_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProbePacket::CopyFrom(const ProbePacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProbePacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ProbePacket::IsInitialized() const {
  return true;
}

void ProbePacket::InternalSwap(ProbePacket* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProbePacket, _impl_.request_)
      + sizeof(ProbePacket::_impl_.request_)
      - PROTOBUF_FIELD_OFFSET(ProbePacket, _impl_.seq_num_)>(
          reinterpret_cast<char*>(&_impl_.seq_num_),
          reinterpret_cast<char*>(&other->_impl_.seq_num_));
}

::google::protobuf::Metadata ProbePacket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_packet_2eproto_getter,
                                   &descriptor_table_packet_2eproto_once,
                                   file_level_metadata_packet_2eproto[2]);
}
// ===================================================================

class Packet::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::Packet, _impl_._oneof_case_);
};

void Packet::set_allocated_data_packet(::DataPacket* data_packet) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_SubPacket();
  if (data_packet) {
    ::google::protobuf::Arena* submessage_arena = data_packet->GetArena();
    if (message_arena != submessage_arena) {
      data_packet = ::google::protobuf::internal::GetOwnedMessage(message_arena, data_packet, submessage_arena);
    }
    set_has_data_packet();
    _impl_.SubPacket_.data_packet_ = data_packet;
  }
  // @@protoc_insertion_point(field_set_allocated:Packet.data_packet)
}
void Packet::set_allocated_feedback_packet(::FeedbackPacket* feedback_packet) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_SubPacket();
  if (feedback_packet) {
    ::google::protobuf::Arena* submessage_arena = feedback_packet->GetArena();
    if (message_arena != submessage_arena) {
      feedback_packet = ::google::protobuf::internal::GetOwnedMessage(message_arena, feedback_packet, submessage_arena);
    }
    set_has_feedback_packet();
    _impl_.SubPacket_.feedback_packet_ = feedback_packet;
  }
  // @@protoc_insertion_point(field_set_allocated:Packet.feedback_packet)
}
void Packet::set_allocated_probe_packet(::ProbePacket* probe_packet) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_SubPacket();
  if (probe_packet) {
    ::google::protobuf::Arena* submessage_arena = probe_packet->GetArena();
    if (message_arena != submessage_arena) {
      probe_packet = ::google::protobuf::internal::GetOwnedMessage(message_arena, probe_packet, submessage_arena);
    }
    set_has_probe_packet();
    _impl_.SubPacket_.probe_packet_ = probe_packet;
  }
  // @@protoc_insertion_point(field_set_allocated:Packet.probe_packet)
}
Packet::Packet(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Packet)
}
inline PROTOBUF_NDEBUG_INLINE Packet::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : SubPacket_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Packet::Packet(
    ::google::protobuf::Arena* arena,
    const Packet& from)
    : ::google::protobuf::Message(arena) {
  Packet* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, seq_num_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, seq_num_),
           offsetof(Impl_, subpacket_len_) -
               offsetof(Impl_, seq_num_) +
               sizeof(Impl_::subpacket_len_));
  switch (SubPacket_case()) {
    case SUBPACKET_NOT_SET:
      break;
      case kDataPacket:
        _impl_.SubPacket_.data_packet_ = ::google::protobuf::Message::CopyConstruct<::DataPacket>(arena, *from._impl_.SubPacket_.data_packet_);
        break;
      case kFeedbackPacket:
        _impl_.SubPacket_.feedback_packet_ = ::google::protobuf::Message::CopyConstruct<::FeedbackPacket>(arena, *from._impl_.SubPacket_.feedback_packet_);
        break;
      case kProbePacket:
        _impl_.SubPacket_.probe_packet_ = ::google::protobuf::Message::CopyConstruct<::ProbePacket>(arena, *from._impl_.SubPacket_.probe_packet_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:Packet)
}
inline PROTOBUF_NDEBUG_INLINE Packet::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : SubPacket_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Packet::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, seq_num_),
           0,
           offsetof(Impl_, subpacket_len_) -
               offsetof(Impl_, seq_num_) +
               sizeof(Impl_::subpacket_len_));
}
Packet::~Packet() {
  // @@protoc_insertion_point(destructor:Packet)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Packet::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_SubPacket()) {
    clear_SubPacket();
  }
  _impl_.~Impl_();
}

void Packet::clear_SubPacket() {
// @@protoc_insertion_point(one_of_clear_start:Packet)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (SubPacket_case()) {
    case kDataPacket: {
      if (GetArena() == nullptr) {
        delete _impl_.SubPacket_.data_packet_;
      }
      break;
    }
    case kFeedbackPacket: {
      if (GetArena() == nullptr) {
        delete _impl_.SubPacket_.feedback_packet_;
      }
      break;
    }
    case kProbePacket: {
      if (GetArena() == nullptr) {
        delete _impl_.SubPacket_.probe_packet_;
      }
      break;
    }
    case SUBPACKET_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = SUBPACKET_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
Packet::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Packet, _impl_._cached_size_),
              false,
          },
          &Packet::MergeImpl,
          &Packet::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Packet::Clear() {
// @@protoc_insertion_point(message_clear_start:Packet)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.seq_num_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.subpacket_len_) -
      reinterpret_cast<char*>(&_impl_.seq_num_)) + sizeof(_impl_.subpacket_len_));
  clear_SubPacket();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Packet::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 3, 0, 2> Packet::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Packet_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Packet>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 seq_num = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Packet, _impl_.seq_num_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Packet, _impl_.seq_num_)}},
    // .PacketType packet_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Packet, _impl_.packet_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Packet, _impl_.packet_type_)}},
    // .FecType fec_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Packet, _impl_.fec_type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Packet, _impl_.fec_type_)}},
    // uint32 fec_index = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Packet, _impl_.fec_index_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Packet, _impl_.fec_index_)}},
    // uint32 subpacket_len = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Packet, _impl_.subpacket_len_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Packet, _impl_.subpacket_len_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 seq_num = 1;
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.seq_num_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .PacketType packet_type = 2;
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.packet_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .FecType fec_type = 3;
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.fec_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint32 fec_index = 4;
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.fec_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 subpacket_len = 5;
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.subpacket_len_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .DataPacket data_packet = 6;
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.SubPacket_.data_packet_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .FeedbackPacket feedback_packet = 7;
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.SubPacket_.feedback_packet_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ProbePacket probe_packet = 8;
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.SubPacket_.probe_packet_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DataPacket>()},
    {::_pbi::TcParser::GetTable<::FeedbackPacket>()},
    {::_pbi::TcParser::GetTable<::ProbePacket>()},
  }}, {{
  }},
};

::uint8_t* Packet::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Packet)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 seq_num = 1;
  if (this->_internal_seq_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_seq_num(), target);
  }

  // .PacketType packet_type = 2;
  if (this->_internal_packet_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_packet_type(), target);
  }

  // .FecType fec_type = 3;
  if (this->_internal_fec_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_fec_type(), target);
  }

  // uint32 fec_index = 4;
  if (this->_internal_fec_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_fec_index(), target);
  }

  // uint32 subpacket_len = 5;
  if (this->_internal_subpacket_len() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_subpacket_len(), target);
  }

  switch (SubPacket_case()) {
    case kDataPacket: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, *_impl_.SubPacket_.data_packet_, _impl_.SubPacket_.data_packet_->GetCachedSize(), target, stream);
      break;
    }
    case kFeedbackPacket: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, *_impl_.SubPacket_.feedback_packet_, _impl_.SubPacket_.feedback_packet_->GetCachedSize(), target, stream);
      break;
    }
    case kProbePacket: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          8, *_impl_.SubPacket_.probe_packet_, _impl_.SubPacket_.probe_packet_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Packet)
  return target;
}

::size_t Packet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Packet)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 seq_num = 1;
  if (this->_internal_seq_num() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_seq_num());
  }

  // .PacketType packet_type = 2;
  if (this->_internal_packet_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_packet_type());
  }

  // .FecType fec_type = 3;
  if (this->_internal_fec_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_fec_type());
  }

  // uint32 fec_index = 4;
  if (this->_internal_fec_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_fec_index());
  }

  // uint32 subpacket_len = 5;
  if (this->_internal_subpacket_len() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_subpacket_len());
  }

  switch (SubPacket_case()) {
    // .DataPacket data_packet = 6;
    case kDataPacket: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.SubPacket_.data_packet_);
      break;
    }
    // .FeedbackPacket feedback_packet = 7;
    case kFeedbackPacket: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.SubPacket_.feedback_packet_);
      break;
    }
    // .ProbePacket probe_packet = 8;
    case kProbePacket: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.SubPacket_.probe_packet_);
      break;
    }
    case SUBPACKET_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Packet::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Packet*>(&to_msg);
  auto& from = static_cast<const Packet&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:Packet)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_seq_num() != 0) {
    _this->_impl_.seq_num_ = from._impl_.seq_num_;
  }
  if (from._internal_packet_type() != 0) {
    _this->_impl_.packet_type_ = from._impl_.packet_type_;
  }
  if (from._internal_fec_type() != 0) {
    _this->_impl_.fec_type_ = from._impl_.fec_type_;
  }
  if (from._internal_fec_index() != 0) {
    _this->_impl_.fec_index_ = from._impl_.fec_index_;
  }
  if (from._internal_subpacket_len() != 0) {
    _this->_impl_.subpacket_len_ = from._impl_.subpacket_len_;
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_SubPacket();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kDataPacket: {
        if (oneof_needs_init) {
          _this->_impl_.SubPacket_.data_packet_ =
              ::google::protobuf::Message::CopyConstruct<::DataPacket>(arena, *from._impl_.SubPacket_.data_packet_);
        } else {
          _this->_impl_.SubPacket_.data_packet_->MergeFrom(from._internal_data_packet());
        }
        break;
      }
      case kFeedbackPacket: {
        if (oneof_needs_init) {
          _this->_impl_.SubPacket_.feedback_packet_ =
              ::google::protobuf::Message::CopyConstruct<::FeedbackPacket>(arena, *from._impl_.SubPacket_.feedback_packet_);
        } else {
          _this->_impl_.SubPacket_.feedback_packet_->MergeFrom(from._internal_feedback_packet());
        }
        break;
      }
      case kProbePacket: {
        if (oneof_needs_init) {
          _this->_impl_.SubPacket_.probe_packet_ =
              ::google::protobuf::Message::CopyConstruct<::ProbePacket>(arena, *from._impl_.SubPacket_.probe_packet_);
        } else {
          _this->_impl_.SubPacket_.probe_packet_->MergeFrom(from._internal_probe_packet());
        }
        break;
      }
      case SUBPACKET_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Packet::CopyFrom(const Packet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Packet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Packet::IsInitialized() const {
  return true;
}

void Packet::InternalSwap(Packet* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Packet, _impl_.subpacket_len_)
      + sizeof(Packet::_impl_.subpacket_len_)
      - PROTOBUF_FIELD_OFFSET(Packet, _impl_.seq_num_)>(
          reinterpret_cast<char*>(&_impl_.seq_num_),
          reinterpret_cast<char*>(&other->_impl_.seq_num_));
  swap(_impl_.SubPacket_, other->_impl_.SubPacket_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Packet::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_packet_2eproto_getter,
                                   &descriptor_table_packet_2eproto_once,
                                   file_level_metadata_packet_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_packet_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
